.include "m324padef.inc"
.equ MOSI=5
.equ SCK=7
.equ SS=4

.org 0x0000
rjmp start

.org 0x0002
rjmp INT0_ISR

.org 0x020
start:
LDI R17,(1<<MOSI)|(1<<SCK)|(1<<SS)
OUT DDRB,R17; SET OUTPUT

LDI R17,0b01010010
STS SPCR0,R17


USART_Init:
LDI R16,51
STS UBRR0L,R16
LDI R16,(1<<UCSZ01)|(1<<UCSZ00)
STS UCSR0C,R16
LDI R16,(1<<TXEN0)
STS UCSR0B,R16

SBI PORTD,2; pull-up activate
LDI R16,1; ng?t c?nh xu?ng int0
STS EIMSK,R16
LDI R16,2; enable int0
STS EICRA,R16
SEI

MAIN: RJMP MAIN

INT0_ISR:
transmit: 
CBI PORTB,SS
LDI R17,0xFF
OUT SPDR0,R17

wait: 
LDS R19,SPSR0
SBRS R19,7
RJMP wait
LDI R22,0
OUT PORTA,R22
RCALL DISPLAY_LCD
AGAIN:
LDI R22,SPDR0
OUT PORTA,R22
RCALL DISPLAY_LCD
UART_SEND:
push r17
UART_SENDWAIT:
LDS R17,UCSR0A
SBRS R17,UDRE0
RJMP UART_SENDWAIT
STS UDR0,R16
POP R17
RETI

 DISPLAY_LCD:
 PUSH R16
 .EQU LCD=PORTA;
 .EQU LCD_DR=DDRA
 .EQU LCD_IN=PINA
 .EQU RS=0 ;bit RS
 .EQU RW=1 ;bit RW
 .EQU E=2 ;bit E
 .EQU CR=$0D ; XUONG DONG 
 .EQU NULL=$00 ; 

 LDI R16,HIGH(RAMEND) ;
 OUT SPH,R16
 LDI R16,LOW(RAMEND)
 OUT SPL,R16

 LDI R16,0XFF
 OUT LCD_DR,R16 ; PORTB IS OUTPUT
 CBI LCD,RS ;RS=PB0=0
 CBI LCD,RW ;RW=PB1=0 
 CBI LCD,E ;E=PB2=0 

 ;-----SET UP LCD----------------------
 RCALL POWER_RESET_LCD4;
 CALL INIT_LCD4;
 CBI LCD,RS;
 LDI R17,$85;
 RCALL OUT_LCD4_2
 LDI R16,1;
 RCALL DELAY_US
 LDI ZH,HIGH(TAB<<1)
 LDI ZL,LOW(TAB<<1)

 LINE1: LPM R17,Z+
 CPI R17,CR
 BREQ DOWN
 SBI LCD,RS
 RCALL OUT_LCD4_2
 LDI R16,1
 CALL DELAY_US
 RJMP LINE1
 DOWN: CBI LCD,RS 
 LDI R17,$C7 
 RCALL OUT_LCD4_2
 LDI R16,1 
 RCALL DELAY_US
 RCALL HEXTOASCII
 LDI YH,0X08
 LDI YL,0X00
 
 LINE2:
 
 HUNDRED:
 LD R17,Y+
 CPI R17,48
 BREQ TENS
 SBI LCD,RS
 RCALL OUT_LCD4_2
 LDI R16,1
 RCALL DELAY_US
 
 TENS:
 LD R17,Y+
 CPI R17,48
 BREQ UNITS
 SBI LCD,RS
 RCALL OUT_LCD4_2
 LDI R16,1
 RCALL DELAY_US

 UNITS:
 LD R17,Y+
 SBI LCD,RS
 RCALL OUT_LCD4_2
 LDI R16,1
 RCALL DELAY_US
 HERE: JMP AGAIN
 

 POWER_RESET_LCD4:
 LDI R16,200 ;delay 20ms
 RCALL DELAY_US 
 CBI LCD,RS 
 LDI R17,$30 
 RCALL OUT_LCD4 
 LDI R16,42 ;delay 4.2ms
 RCALL DELAY_US
 CBI LCD,RS 
 LDI R17,$30 
 RCALL OUT_LCD4 
 LDI R16,2 ;delay 200us
 RCALL DELAY_US
 CBI LCD,RS 
 LDI R17,$32
 RCALL OUT_LCD4_2
 RET
 
 ;----------------------------

 INIT_LCD4: CBI LCD,RS 
 LDI R17,0x28 
 RCALL OUT_LCD4_2
 
 CBI LCD,RS 
 LDI R17,0x01 ;CLEAR DISPLAY
 RCALL OUT_LCD4_2
 LDI R16,20 ;DELAY 2MS
 RCALL DELAY_US
 CBI LCD,RS
 LDI R17,0x0C ; DISPLAY ON CURSOR OFF
 RCALL OUT_LCD4_2 
 CBI LCD,RS ; RS=0
 LDI R17,0x06 
 RCALL OUT_LCD4_2
 RET
 
 ;----------------------------------

 OUT_LCD4_2:
 IN R16,LCD 
 ANDI R16,(1<<RS) 
 PUSH R16 
 PUSH R17
 ANDI R17,$F0 
 OR R17,R16 
 RCALL OUT_LCD4 
 LDI R16,1 ;WAIT 100US
 RCALL DELAY_US
 POP R17 
 POP R16 
 SWAP R17 


 ANDI R17,$F0
 OR R17,R16 ;ghép bit RS
 RCALL OUT_LCD4;ghi ra LCD
 LDI R16,1 ;ch  100us?
 RCALL DELAY_US
 RET
 
 ;OUT_LCD4 TO WRITE COMMAND/DATA TO LCD 

 OUT_LCD4: 
 OUT LCD,R17
 SBI LCD,E
 CBI LCD,E
 RET

 ;------------------ 

 DELAY_US: 
 MOV R15,R16 ;1MC n p data cho R15?
 LDI R16,200 ;1MC s  d ng R16? ?
 L1: MOV R14,R16 ;1MC n p data cho R14?
 L2: DEC R14 ;1MC
 NOP ;1MC
 BRNE L2 ;2/1MC
 DEC R15 ;1MC
 BRNE L1 ;2/1MC
 RET ;4MC

 .ORG 0X0200
 TAB: .DB "RESULT:" ,$0D
 RET

 HEXTOASCII:
 PUSH R22
 PUSH R21
 PUSH R20
 PUSH R18
 MOV R18,R22
 LDI R20,0
 LDI R21,0
 LDI R22,0
 
 LOOP1:
 CPI R18,10
 BRLO A
 SUBI R18,10
 INC R21
 RJMP LOOP1

 A: MOV R22,R18
 
 LOOP2:
 CPI R21,10
 BRLO B
 SUBI R21,10
 INC R20
 RJMP LOOP2
 
 B:
 MOV R17,R20
 RCALL HEX_ASC
 STS 0x800,r18
 MOV R17,R21
 RCALL HEX_ASC
 STS 0x801,R18
 MOV R17,R22
 RCALL HEX_ASC
 STS 0x802,R18
 LDI R18,0X00
 STS 0X803,R18
 POP R18
 POP R20
 POP R21
 POP R22
 RET
 
 ;HEX_ASC CONVERT HEX TO ASCII
 ;INPUT R17 = HEXCODE, OUT R18=ASCIICODE

 HEX_ASC:
 CPI R17,0X0A
 BRCS NUM
 LDI R18,0X37
 RJMP CHAR
 NUM: LDI R18,0X30
 CHAR: ADD R18,R17
 RET


